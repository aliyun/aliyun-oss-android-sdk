apply plugin: 'maven-publish'
apply plugin: 'signing'


Properties properties = new Properties()
File projectPropertiesFile = project.rootProject.file("project.properties");
if (projectPropertiesFile.exists()) {
    properties.load(projectPropertiesFile.newDataInputStream())
}

// read properties
def projectName = properties.getProperty("project.name")
def projectGroupId = properties.getProperty("project.groupId")
def projectArtifactId = properties.getProperty("project.artifactId")
def projectVersionName = properties.getProperty("project.version")

def javadocName = properties.getProperty("javadoc.name")

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId projectGroupId
            artifactId projectArtifactId
            version projectVersionName

            pom {
                name = projectName
                description = 'Aliyun Open Services SDK for Android\n' +
                        '      Copyright (C) Alibaba Cloud Computing\n' +
                        '      All rights reserved.\n' +
                        '      版权所有 （C）阿里云计算有限公司\n' +
                        '      http://www.aliyun.com'
                url = "https://github.com/aliyun/aliyun-oss-android-sdk"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "aliyunproducts"
                        name = "Aliyun SDK"
                        email = "aliyunsdk@aliyun.com"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/aliyun/aliyun-oss-android-sdk.git"
                    developerConnection = "scm:git:ssh://github.com/aliyun/aliyun-oss-android-sdk.git"
                    url = "https://github.com/aliyun/aliyun-oss-android-sdk"
                }
            }
        }
    }
}

//签名
signing {
    sign publishing.publications.mavenJava
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// javadoc configuration
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version projectVersionName
        links "http://docs.oracle.com/javase/7/docs/api"
        title javadocName + " " + projectVersionName + " API"
    }
}
